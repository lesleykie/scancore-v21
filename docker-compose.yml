services:
  app:
    build: .
    ports:
      - "${APP_PORT:-8088}:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-scancore}:${POSTGRES_PASSWORD:-scancore_password}@db:5432/${POSTGRES_DB:-scancore}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-secret-key-change-this}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:8088}
      - DEBUG_MODE=${DEBUG_MODE:-false}
      - FIRST_INSTALL=${FIRST_INSTALL:-true}
    volumes:
      - ${DATA_PATH:-./docker-data/scancorev20}/app:/app/data:rw
      - ${DATA_PATH:-./docker-data/scancorev20}/uploads:/app/uploads:rw
      - ${DATA_PATH:-./docker-data/scancorev20}/modules:/app/modules:rw
      - ${DATA_PATH:-./docker-data/scancorev20}/themes:/app/themes:rw
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: postgres:16-alpine
    ports:
      - "${DB_PORT:-5433}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-scancore}
      - POSTGRES_USER=${POSTGRES_USER:-scancore}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-scancore_password}
    volumes:
      - ${DATA_PATH:-./docker-data/scancorev20}/database:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-scancore} -d ${POSTGRES_DB:-scancore}"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    ports:
      - "${ADMINER_PORT:-8081}:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  default:
    name: scancore_network
